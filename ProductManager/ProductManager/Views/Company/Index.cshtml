@model PaginatedList<Company>
@{
}

<h2>Companies</h2>

<br />
<a asp-controller="Company" asp-action="Create">Register a new Company</a>
<br />
<br />

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Filter: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

@if (Model != null)
{
    <table class="table">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Email
            </th>
            <th>
                Admin
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PaymentSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Payment Status</a>
            </th>
            <th>
            </th>
            <th>
            </th>
        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyPhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AdminEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentStatus)
                </td>
                <td>
                    <a asp-controller="Company" asp-action="Edit" asp-route-CompanyId="@item.CompanyId">Edit</a>
                </td>
                <td>
                    Delete
                </td>
            </tr>

        }
    </table>
}
else
{
    <p>ViewModel.Message</p>
}

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>